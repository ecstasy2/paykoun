{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to MkDocs\n#\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n#\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n#\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/paykoun/", 
            "text": "Welcome to MkDocs\n#\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n#\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n#\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Paykoun"
        }, 
        {
            "location": "/paykoun/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/paykoun/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/paykoun/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/user-guide/introduction/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Introduction"
        }, 
        {
            "location": "/user-guide/introduction/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/user-guide/introduction/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/user-guide/introduction/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/user-guide/introduction/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/user-guide/introduction/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/user-guide/introduction/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/user-guide/introduction/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/user-guide/introduction/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/user-guide/introduction/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/user-guide/introduction/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/user-guide/introduction/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/user-guide/introduction/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/user-guide/introduction/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/user-guide/introduction/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/user-guide/introduction/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/user-guide/introduction/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/user-guide/introduction/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/user-guide/introduction/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/user-guide/introduction/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Workers Explained"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Recurring jobs"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Logging"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Testing"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Built-in Metrics"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Helpers"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "Plugins"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n#\n\n\nInstallation\n#\n\n\nInstalling MkDocs\n#\n\n\nBefore installing \nMkDocs\n, you need to make sure you have Python and \npip\n\n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:\n\n\npython --version\n\n# Python 2.7.2\n\npip --version\n\n# pip 1.5.2\n\n\n\n\n\n\nInstalling and verifying MkDocs is as simple as:\n\n\npip install mkdocs \n mkdocs --version\n\n# mkdocs, version 0.15.2\n\n\n\n\n\n\nInstalling Material\n#\n\n\nNext, assuming you have MkDocs up and running \nmkdocs-material\n can be\ninstalled with \npip\n:\n\n\npip install mkdocs-material\n\n\n\n\n\nUsage\n#\n\n\nIf you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:\n\n\nmkdocs new my-project\n\ncd\n my-project\n\n\n\n\n\nMkDocs will create the necessary files and base directory structure inside the\nfolder \nmy-project\n. In order to enable the theme just add the following line\nto the auto-generated \nmkdocs.yml\n:\n\n\ntheme\n:\n \nmaterial\n\n\n\n\n\n\nIf your project is hosted on GitHub, add the repository link to the\nconfiguration. If the \nrepo_name\n equals \nGitHub\n, the Material theme will\nadd a download and star button, and display the number of stars:\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n\n\n\nMkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:\n\n\nmkdocs serve\n\n\n\n\n\nNow you can go to \nlocalhost:8000\n and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.\n\n\nOptions\n#\n\n\nThe Material theme adds some extra variables for configuration via your\nproject's \nmkdocs.yml\n. See the following section for all available options.\n\n\nAdding a version\n#\n\n\nIn order to add the current version next to the project banner inside the\ndrawer, you can set the variable \nextra.version\n:\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n\n\n\n\n\nThis will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.\n\n\nAdding a logo\n#\n\n\nIf your project has a logo, you can add it to the drawer/navigation by defining\nthe variable \nextra.logo\n. Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder \ndocs/images\n, add your image and reference it via:\n\n\nextra\n:\n\n  \nlogo\n:\n \nimages/logo.png\n\n\n\n\n\n\nChanging the color palette\n#\n\n\nMaterial defines a default hue for every primary and accent color on Google's\nmaterial design \ncolor palette\n. This makes it very easy to change the\noverall look of the theme. Just set the variables \nextra.palette.primary\n and\n\nextra.palette.accent\n to one of the colors defined in the palette:\n\n\nextra\n:\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n\n\n\n\n\nColor names can be written upper- or lowercase but must match the names of the\nmaterial design \ncolor palette\n. Valid values are: \nred\n, \npink\n, \npurple\n,\n\ndeep purple\n, \nindigo\n, \nblue\n, \nlight blue\n, \ncyan\n, \nteal\n, \ngreen\n, \nlight\ngreen\n, \nlime\n, \nyellow\n, \namber\n, \norange\n, \ndeep orange\n, \nbrown\n, \ngrey\n and\n\nblue grey\n. The last three colors can only be used as a primary color.\n\n\n\n\nIf the color is set via this configuration, an additional CSS file called\n\npalettes.css\n is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See \nthis article\n for more information.\n\n\nChanging the font family\n#\n\n\nMaterial uses the \nUbuntu font family\n by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from \nGoogle Fonts\n and can be easily changed to other fonts, like for\nexample Google's own \nRoboto font\n:\n\n\nextra\n:\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n\n\n\n\n\nThe text font will be loaded in font-weights 400 and \n700\n, the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set \nextra.font\n to\n\n'none'\n:\n\n\nextra\n:\n\n  \nfont\n:\n \nnone\n\n\n\n\n\n\nLocalization\n#\n\n\nThe \nPrevious\n and \nNext\n labels in the footer can easily be changed by\ndefining the variables \nextra.i18n.prev\n and \nextra.i18n.next\n:\n\n\nextra\n:\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n\n\n\n\n\nAdding a GitHub and Twitter account\n#\n\n\nIf you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables \nextra.author.github\n and\n\nextra.author.twitter\n respectively:\n\n\nextra\n:\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n\n\n\nGoogle Analytics integration\n#\n\n\nMaterial makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's \nmkdocs.yml\n:\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n\n\n\nMore advanced customization\n#\n\n\nIf you want to change the general appearance of the Material theme, see\n\nthis article\n for more information on advanced customization.\n\n\nExtensions\n#\n\n\nMkDocs supports several \nMarkdown extensions\n. The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.\n\n\nCodeHilite (recommended)\n#\n\n\nThis extensions uses \nPygments\n (install with \npip install pygments\n) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n\n\n\n\n\nIf you want more extensive highlighting, you can use a JavaScript library like\n\nhighlight.js\n, which is not included in Material. See \nthis link\n for\nfurther instructions\n\n\nPermalinks\n#\n\n\nIn order to add \npermalinks\n to the headers of your article, set the\n\nmarkdown_extensions.toc.permalink\n variable to a symbol, e.g. \n#\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ntoc\n:\n\n    \npermalink\n:\n \n#\n\n\n\n\n\n\nThe symbol can be chosen freely, it can even be a WebFont icon.\n\n\nAdmonition\n#\n\n\nAdmonition\n is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable \nmarkdown_extensions.admonition\n:\n\n\nmarkdown_extensions\n:\n\n  \n-\n \nadmonition\n\n\n\n\n\n\nIn order to add a note, use the following syntax inside your article:\n\n\n!!! note\n    Nothing to see here, move along.\n\n\n\n\n\nThis will print the following block:\n\n\n\n\nNote\n\n\nNothing to see here, move along.\n\n\n\n\nThe Material template adds a neutral color for the \nnote\n class and a red color\nfor the \nwarning\n class. You can also add a custom title:\n\n\n!!! warning \nDon\nt try this at home\n\n    If you do, you will regret it.\n\n\n\n\n\nThis will print:\n\n\n\n\nDon't try this at home\n\n\nIf you do, you will regret it.\n\n\n\n\nMore colors can be freely defined.\n\n\nFull example\n#\n\n\nBelow is a full example configuration for a mkdocs.yml:\n\n\n# Project information\n\n\nsite_name\n:\n \nMy\n \nProject\n\n\nsite_description\n:\n \nA\n \nshort\n \ndescription\n \nof\n \nmy\n \nproject\n\n\nsite_author\n:\n \nJohn\n \nDoe\n\n\nsite_url\n:\n \nhttps://my-github-handle.github.io/my-project\n\n\n\n# Repository\n\n\nrepo_name\n:\n \nGitHub\n\n\nrepo_url\n:\n \nhttps://github.com/my-github-handle/my-project\n\n\n\n# Copyright\n\n\ncopyright\n:\n \nCopyright\n \n(c)\n \n2016\n \nJohn\n \nDoe\n\n\n\n# Documentation and theme\n\n\ndocs_dir\n:\n \ndocs\n\n\ntheme\n:\n \nmaterial\n\n\n\n# Options\n\n\nextra\n:\n\n  \nversion\n:\n \n0.1.0\n\n  \nlogo\n:\n \nimages/logo.png\n\n  \npalette\n:\n\n    \nprimary\n:\n \nindigo\n\n    \naccent\n:\n \nlight\n \nblue\n\n  \nfont\n:\n\n    \ntext\n:\n \nRoboto\n\n    \ncode\n:\n \nRoboto\n \nMono\n\n  \ni18n\n:\n\n    \nprev\n:\n \nPrevious\n\n    \nnext\n:\n \nNext\n\n  \nauthor\n:\n\n    \ngithub\n:\n \nmy-github-handle\n\n    \ntwitter\n:\n \nmy-twitter-handle\n\n\n\n# Google Analytics\n\n\ngoogle_analytics\n:\n\n  \n-\n \nUA-XXXXXXXX-X\n\n  \n-\n \nauto\n\n\n\n# Extensions\n\n\nmarkdown_extensions\n:\n\n  \n-\n \ncodehilite(css_class=code)\n\n  \n-\n \nadmonition\n\n  \n-\n \ntoc\n:\n\n      \npermalink\n:\n \n#", 
            "title": "License"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#installation", 
            "text": "", 
            "title": "Installation"
        }, 
        {
            "location": "/getting-started/#installing-mkdocs", 
            "text": "Before installing  MkDocs , you need to make sure you have Python and  pip \n\u2013 the Python package manager \u2013 up and running. Assuming you are a developer and\nhave a basic understanding of how things work and what StackOverflow is, we\nwon't provide guidelines on setting those up. You can verify if you're already\ngood to go with the following commands:  python --version # Python 2.7.2 \npip --version # pip 1.5.2   Installing and verifying MkDocs is as simple as:  pip install mkdocs   mkdocs --version # mkdocs, version 0.15.2", 
            "title": "Installing MkDocs"
        }, 
        {
            "location": "/getting-started/#installing-material", 
            "text": "Next, assuming you have MkDocs up and running  mkdocs-material  can be\ninstalled with  pip :  pip install mkdocs-material", 
            "title": "Installing Material"
        }, 
        {
            "location": "/getting-started/#usage", 
            "text": "If you haven't already done it, creating a new documentation project is really\nsimple in MkDocs:  mkdocs new my-project cd  my-project  MkDocs will create the necessary files and base directory structure inside the\nfolder  my-project . In order to enable the theme just add the following line\nto the auto-generated  mkdocs.yml :  theme :   material   If your project is hosted on GitHub, add the repository link to the\nconfiguration. If the  repo_name  equals  GitHub , the Material theme will\nadd a download and star button, and display the number of stars:  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project   MkDocs includes a development server, so you can view your changes as you go -\nvery handy. Spin it up with the following command:  mkdocs serve  Now you can go to  localhost:8000  and the Material\ntheme should be visible. You can now start writing your documentation, or read\non and customize the theme through some options.", 
            "title": "Usage"
        }, 
        {
            "location": "/getting-started/#options", 
            "text": "The Material theme adds some extra variables for configuration via your\nproject's  mkdocs.yml . See the following section for all available options.", 
            "title": "Options"
        }, 
        {
            "location": "/getting-started/#adding-a-version", 
            "text": "In order to add the current version next to the project banner inside the\ndrawer, you can set the variable  extra.version :  extra : \n   version :   0.1.0   This will also change the link behind the download button to point to the\narchive with the respective version on GitHub, assuming a release tagged with\nthis exact version identifier.", 
            "title": "Adding a version"
        }, 
        {
            "location": "/getting-started/#adding-a-logo", 
            "text": "If your project has a logo, you can add it to the drawer/navigation by defining\nthe variable  extra.logo . Ideally, the image of your logo should have\nrectangular shape with a minimum resolution of 128x128 and leave some room\ntowards the edges. The logo will also be used as a web application icon on iOS.\nSimply create the folder  docs/images , add your image and reference it via:  extra : \n   logo :   images/logo.png", 
            "title": "Adding a logo"
        }, 
        {
            "location": "/getting-started/#changing-the-color-palette", 
            "text": "Material defines a default hue for every primary and accent color on Google's\nmaterial design  color palette . This makes it very easy to change the\noverall look of the theme. Just set the variables  extra.palette.primary  and extra.palette.accent  to one of the colors defined in the palette:  extra : \n   palette : \n     primary :   indigo \n     accent :   light   blue   Color names can be written upper- or lowercase but must match the names of the\nmaterial design  color palette . Valid values are:  red ,  pink ,  purple , deep purple ,  indigo ,  blue ,  light blue ,  cyan ,  teal ,  green ,  light\ngreen ,  lime ,  yellow ,  amber ,  orange ,  deep orange ,  brown ,  grey  and blue grey . The last three colors can only be used as a primary color.   If the color is set via this configuration, an additional CSS file called palettes.css  is included that defines the color palettes. If you want to\nkeep things lean, clone the repository and recompile the theme with your\ncustom colors set. See  this article  for more information.", 
            "title": "Changing the color palette"
        }, 
        {
            "location": "/getting-started/#changing-the-font-family", 
            "text": "Material uses the  Ubuntu font family  by default, specifically the regular\nsans-serif type for text and the monospaced type for code. Both fonts are\nloaded from  Google Fonts  and can be easily changed to other fonts, like for\nexample Google's own  Roboto font :  extra : \n   font : \n     text :   Roboto \n     code :   Roboto   Mono   The text font will be loaded in font-weights 400 and  700 , the monospaced\nfont in regular weight. If you want to load fonts from other destinations or\ndon't want to use the Google Fonts loading magic, just set  extra.font  to 'none' :  extra : \n   font :   none", 
            "title": "Changing the font family"
        }, 
        {
            "location": "/getting-started/#localization", 
            "text": "The  Previous  and  Next  labels in the footer can easily be changed by\ndefining the variables  extra.i18n.prev  and  extra.i18n.next :  extra : \n   i18n : \n     prev :   Previous \n     next :   Next", 
            "title": "Localization"
        }, 
        {
            "location": "/getting-started/#adding-a-github-and-twitter-account", 
            "text": "If you have a GitHub and/or Twitter account, you can add links to your\naccounts to the drawer by setting the variables  extra.author.github  and extra.author.twitter  respectively:  extra : \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle", 
            "title": "Adding a GitHub and Twitter account"
        }, 
        {
            "location": "/getting-started/#google-analytics-integration", 
            "text": "Material makes it easy to integrate site tracking with Google Analytics.\nBesides basic tracking, clicks on all outgoing links can be tracked, clicks on\nthe download and star button, as well as how site search is used. Tracking can\nbe activated in your project's  mkdocs.yml :  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto", 
            "title": "Google Analytics integration"
        }, 
        {
            "location": "/getting-started/#more-advanced-customization", 
            "text": "If you want to change the general appearance of the Material theme, see this article  for more information on advanced customization.", 
            "title": "More advanced customization"
        }, 
        {
            "location": "/getting-started/#extensions", 
            "text": "MkDocs supports several  Markdown extensions . The following extensions are\nnot enabled by default (see the link for which are enabled by default), so you\nhave to switch them on explicitly.", 
            "title": "Extensions"
        }, 
        {
            "location": "/getting-started/#codehilite-recommended", 
            "text": "This extensions uses  Pygments  (install with  pip install pygments ) to add\ncode highlighting to fenced code blocks. It might not be the best code\nhighlighter, but it works without JavaScript and on the server:  markdown_extensions : \n   -   codehilite(css_class=code)   If you want more extensive highlighting, you can use a JavaScript library like highlight.js , which is not included in Material. See  this link  for\nfurther instructions", 
            "title": "CodeHilite (recommended)"
        }, 
        {
            "location": "/getting-started/#permalinks", 
            "text": "In order to add  permalinks  to the headers of your article, set the markdown_extensions.toc.permalink  variable to a symbol, e.g.  # :  markdown_extensions : \n   -   toc : \n     permalink :   #   The symbol can be chosen freely, it can even be a WebFont icon.", 
            "title": "Permalinks"
        }, 
        {
            "location": "/getting-started/#admonition", 
            "text": "Admonition  is a handy extension that adds block-styled side content to your\ndocumentation, for example hints, notes or warnings. It can be enabled by\nsetting the variable  markdown_extensions.admonition :  markdown_extensions : \n   -   admonition   In order to add a note, use the following syntax inside your article:  !!! note\n    Nothing to see here, move along.  This will print the following block:   Note  Nothing to see here, move along.   The Material template adds a neutral color for the  note  class and a red color\nfor the  warning  class. You can also add a custom title:  !!! warning  Don t try this at home \n    If you do, you will regret it.  This will print:   Don't try this at home  If you do, you will regret it.   More colors can be freely defined.", 
            "title": "Admonition"
        }, 
        {
            "location": "/getting-started/#full-example", 
            "text": "Below is a full example configuration for a mkdocs.yml:  # Project information  site_name :   My   Project  site_description :   A   short   description   of   my   project  site_author :   John   Doe  site_url :   https://my-github-handle.github.io/my-project  # Repository  repo_name :   GitHub  repo_url :   https://github.com/my-github-handle/my-project  # Copyright  copyright :   Copyright   (c)   2016   John   Doe  # Documentation and theme  docs_dir :   docs  theme :   material  # Options  extra : \n   version :   0.1.0 \n   logo :   images/logo.png \n   palette : \n     primary :   indigo \n     accent :   light   blue \n   font : \n     text :   Roboto \n     code :   Roboto   Mono \n   i18n : \n     prev :   Previous \n     next :   Next \n   author : \n     github :   my-github-handle \n     twitter :   my-twitter-handle  # Google Analytics  google_analytics : \n   -   UA-XXXXXXXX-X \n   -   auto  # Extensions  markdown_extensions : \n   -   codehilite(css_class=code) \n   -   admonition \n   -   toc : \n       permalink :   #", 
            "title": "Full example"
        }
    ]
}